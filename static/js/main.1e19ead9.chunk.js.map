{"version":3,"sources":["common/AuthUtils.ts","ui/Navbar/NavigationMenu.tsx","ui/Navbar/Navbar.tsx","PrivateRoute.tsx","PublicRoute.tsx","ports/HttpClient.ts","ports/UserAPIService.ts","domain/User.ts","common/HocUtils.tsx","common/Toaster.ts","ui/Register.tsx","ui/Login.tsx","ui/ActivityIcon.tsx","ui/Activities/ActivitySub.tsx","domain/ActivityType.ts","domain/Activity.ts","common/DateUtils.ts","ports/ActivityAPIService.ts","common/ValueUtils.ts","ui/Activities/NewActivityDialogue.tsx","ui/Activities/Activities.tsx","ui/Challenges/ChallengeSub.tsx","domain/ChallengeStatus.ts","domain/Challenge.ts","ports/ChallengeAPIService.ts","ui/Challenges/NewChallengeDialogue.tsx","ui/Challenges/Challenges.tsx","ui/Logout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isAuthTokenValid","authToken","localStorage","getItem","undefined","splitToken","split","decodedPayload","JSON","parse","atob","isAfter","Date","exp","date","year","month","day","time","hour","minute","removeItem","NavigationMenu","className","href","to","Component","Navbar","role","PrivateRoute","authPath","this","props","component","Route","PublicRoute","homePath","apiClient","axios","create","baseURL","headers","responseType","path","authorized","get","getAuthHeaderFromStorage","handleError","body","post","delete","error","isAxiosError","axiosError","console","response","Promise","reject","accessToken","Error","Authorization","username","password","HttpClient","then","res","id","user","data","score","creationDate","retrievedUser","resolve","token","setItem","withHistoryHook","history","useHistory","createToast","message","type","bulmaToast","animate","in","out","position","duration","state","event","setState","currentTarget","name","value","preventDefault","UserAPIService","registerUser","push","onSubmit","submitHandler","bind","htmlFor","onChange","changeHandler","minLength","required","placeholder","React","loginUser","responseMessage","log","ActivityIcon","activityType","typeText","Provider","data-testid","setIconForActivityType","ActivitySub","typeDescriptionPast","ActivityTypes","DRINK_WATER","typeDescription","WALKING","RUNNING","CYCLING","SWIMMING","CALISTHENICS","activityFromActivityResponseObject","activityResponse","toString","userID","dateToYMD","d","getDate","m","getMonth","getFullYear","eachDayOfWeekForDate","dayRange","firstDayOfWeek","startOfWeek","weekStartsOn","lastDayOfWeek","endOfWeek","currentDate","addDays","eachCalendarWeekRangeInMonthForDate","startOfMonth","endDate","endOfMonth","returnValue","isBefore","calendarWeek","getWeek","startingOfWeek","endingOfWeek","addWeeks","startDate","activities","map","activity","textType","isBasicStateValueValid","String","NewActivityDialogue","currentNewActivityFormSelection","newActivityDialogueButtonText","newActivityDialogueVisible","returnOptions","key","target","ActivityAPIService","saveNewActivityForUser","updateListFunction","handleCreateNewActivityButton","handleSelectDropDownChange","defaultValue","createDropdownOptionsForActivityTypes","onClick","handleShowNewActivityDialogueButton","Activities","calendarVisible","updateActivitiesInState","eachDayOfWeekCurrent","getAllActivitiesForUserBetweenDates","length","weekDay","weekIndex","filtered","filter","act","isSameDay","format","filterIndex","newDateSelection","Array","isArray","getYear","toggleCalendarVisibility","minDetail","showWeekNumbers","changeCurrentDate","createDayClustersForActivitiesInWeekForStateCurrentDate","ChallengeSub","challengeStatus","statusText","getColorCSSClassForChallengeStatus","timesAWeekCurrent","differenceInCalendarWeeks","expirationDate","timesAWeekGoal","ChallengeStatuses","IN_PROGRESS","statusDescription","SUCCEEDED","FAILED","challengeFromChallengeResponseObject","challengeResponse","Number","receivedChallenges","challenge","durationInWeeks","activityTypeText","weeksDuration","NewChallengeDialogue","currentNewChallengeFormSelections","weeklyGoal","amountOfWeeks","newChallengeDialogueButtonText","newChallengeDialogueVisible","ChallengeAPIService","saveNewChallengeForUser","handleSubmitNewChallengeCreationForm","handleNewChallengeActivityTypeChange","createDropwDownOptionsForNewChallengeActivityTypes","min","max","handleNewChallengeWeeklyGoalChange","handleNewChallengeAmountOfWeeksChange","handleShowNewChallengeDialogueButton","Challenges","coveredCalendarWeeks","challenges","updateChallengesInState","currentMonthsWeekStartsAndEnds","getAllChallengesForUserBetweenDates","calendarWeekObject","isSameWeek","index","createStartWeekClustersForChallengesInMonthForStateCurrentDate","Logout","logoutAccount","App","basename","process","exact","Register","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAyBO,SAASA,IACf,IAAMC,EAAYC,aAAaC,QAAQ,eAEvC,QAAkBC,IAAdH,GAAwC,MAAbA,EAAmB,OAAO,EAEzD,IAAMI,EAAaJ,EAAUK,MAAM,KAC7BC,EAAiBC,KAAKC,MAC3BC,KAAKL,EAAW,KAGjB,OACCM,YACC,IAAIC,KACJ,IAAIA,KACHL,EAAeM,IAAIC,KAAKC,KACxBR,EAAeM,IAAIC,KAAKE,MACxBT,EAAeM,IAAIC,KAAKG,IACxBV,EAAeM,IAAIK,KAAKC,KACxBZ,EAAeM,IAAIK,KAAKE,WAI1BlB,aAAamB,WAAW,gBACjB,G,mBCjBMC,E,4JA3Bd,WACC,OACC,sBAAKC,UAAU,wCAAf,UACC,mBAAGA,UAAU,cAAcC,KAAK,KAAhC,kBAIA,sBAAKD,UAAU,kBAAf,UACC,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,cAAvB,wBAGA,cAAC,IAAD,CAAME,GAAG,cAAcF,UAAU,cAAjC,wBAGA,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,wBAAvB,qBAGA,oBAAIA,UAAU,mBACd,cAAC,IAAD,CAAME,GAAG,UAAUF,UAAU,cAA7B,8B,GAnBwBG,aCYdC,E,4JAXd,WACC,OACC,qBAAKJ,UAAU,SAASK,KAAK,aAA7B,SACC,qBAAKL,UAAU,eAAf,SACC,cAAC,EAAD,Y,GALgBG,aCmBNG,E,4MAjBNC,SAAmB,S,4CAE3B,WAAU,IAAD,OACR,GAAI9B,IACH,OACC,qCACC,cAAC,EAAD,IACA,cAAC,IAAD,eAAW+B,KAAKC,WAKlB,OAAO,cAAC,IAAD,2BAAWD,KAAKC,OAAhB,IAAuBC,UADP,kBAAM,cAAC,IAAD,CAAUR,GAAI,EAAKK,mB,GAZxBI,KCiBZC,E,4MAjBNC,SAAW,I,4CAEnB,WAAU,IAAD,OACR,GAAIpC,IAAoB,CAEvB,OACC,cAAC,IAAD,2BACK+B,KAAKC,OADV,IAECC,UAJqB,kBAAM,cAAC,IAAD,CAAUR,GAAI,EAAKW,eAQhD,OAAO,cAAC,IAAD,eAAWL,KAAKC,Y,GAbAE,K,kDC8EX,M,iDA9ENG,UAA2BC,IAAMC,OAAO,CAC/CC,QAAS,4BACTC,QAAS,CACR,eAAgB,oBAEjBC,aAAc,S,8EAGf,gGACCC,EADD,EACCA,KADD,IAECC,kBAFD,2BAQeb,KAAKM,UAAUQ,IAC3BF,EACAC,EAAa,CAAEH,QAASV,KAAKe,4BAA+B,IAV/D,iGAaSf,KAAKgB,YAAL,OAbT,yD,gHAiBA,kGACCJ,EADD,EACCA,KADD,IAECC,kBAFD,SAGCI,EAHD,EAGCA,KAHD,kBAUejB,KAAKM,UAAUY,KAC3BN,EACAK,EACAJ,EAAa,CAAEH,QAASV,KAAKe,4BAA+B,IAb/D,iGAgBSf,KAAKgB,YAAL,OAhBT,yD,kHAoBA,4FAAsBJ,EAAtB,EAAsBA,KAAtB,kBAEeZ,KAAKM,UAAUa,OAAOP,EAAM,CACxCF,QAASV,KAAKe,6BAHjB,iGAMSf,KAAKgB,YAAL,OANT,yD,gFAUA,SAAoBI,GACnB,GAAIb,IAAMc,aAAaD,GAAQ,CAC9B,IAAIE,EAA8BF,EAClCG,QAAQH,MAAME,EAAWE,eAEzBD,QAAQH,MAAMA,GAGf,OAAOK,QAAQC,OAAON,K,sCAGvB,WACC,IACMO,EAAcxD,aAAaC,QAAQ,eAEzC,QAAoBC,IAAhBsD,GAA4C,MAAfA,EAChC,MAAM,IAAIC,MAAM,wCAEhB,MAAO,CAAEC,cANe,UAMmBF,O,UC1B/B,M,mIA9Cd,WACCG,EACAC,GAFD,gGAK8BC,EAAWd,KAAK,CAC3CN,KAAM,SACNC,YAAY,EACZI,KAAM,CACLa,SAAUA,EACVC,SAAUA,KAETE,MAAK,SAACC,GACR,MCFI,CACNC,IAFyCC,EDGLF,EAAIG,MCD/BF,GACTL,SAAUM,EAAKN,SACfQ,MAAOF,EAAKE,MACZC,aAAc,IAAI1D,KAAKuD,EAAKG,eALvB,IAAoCH,KDV1C,cAKQI,EALR,yBAgBSf,QAAQgB,QAAQD,IAhBzB,yDAkBSf,QAAQC,OAAR,OAlBT,yD,uHAsBA,WACCI,EACAC,GAFD,kGAKyBC,EAAWd,KAAK,CACtCN,KAAM,UACNC,YAAY,EACZI,KAAM,CACLa,SAAUA,EACVC,SAAUA,KAVd,cAKQP,EALR,OAcQkB,EAAQlB,EAASa,KAAT,MACdlE,aAAawE,QAAQ,cAAeD,GAftC,kBAiBSjB,QAAQgB,QAAQjB,EAASa,OAjBlC,yDAmBSZ,QAAQC,OAAR,OAnBT,yD,iEExBYkB,EAAkB,SAACjD,GAC/B,OAAO,SAACM,GACP,IAAM4C,EAAUC,cAEhB,OAAO,cAACnD,EAAD,aAAWkD,QAASA,GAAa5C,M,cCHnC,SAAS8C,EAAYC,EAAiBC,GAC5CC,QAAiB,CAChBF,QAASA,EACTC,KAAMA,EACNE,QAAS,CAAEC,GAAI,SAAUC,IAAK,WAC9BC,SAAU,YACVC,SAAU,M,IC0FGX,I,4MAxFdY,MAAQ,CACP1B,SAAU,GACVC,SAAU,I,mDAGX,SAAsB0B,GACrBzD,KAAK0D,SAAL,eACED,EAAME,cAAcC,KAAOH,EAAME,cAAcE,U,2BAIlD,SAAsBJ,GAAoC,IAAD,OACxDA,EAAMK,iBAENC,EAAeC,aACdhE,KAAKwD,MAAM1B,SACX9B,KAAKwD,MAAMzB,UACVE,MAAK,SAACG,QACM/D,IAAT+D,QAAkC/D,IAAZ+D,EAAKD,KAC9BY,EAAY,0BAA2B,cAGvC,EAAK9C,MAAM4C,QAAQoB,KAAK,gB,oBAK3B,WACC,OACC,qBAAKzE,UAAU,8BAAf,SACC,qBAAKA,UAAU,6CAAf,SACC,qBAAKA,UAAU,wBAAf,SACC,uBACCA,UAAU,MACV0E,SAAUlE,KAAKmE,cAAcC,KAAKpE,MAFnC,UAGC,mBAAGR,UAAU,aAAb,sBACA,sBAAKA,UAAU,QAAf,UACC,uBAAOA,UAAU,QAAQ6E,QAAQ,WAAjC,uBAGA,qBAAK7E,UAAU,UAAf,SACC,uBACCA,UAAU,QACVyD,KAAK,OACLW,KAAK,WACLU,SAAUtE,KAAKuE,cAAcH,KAAKpE,MAClCwE,UAAW,EACXC,UAAU,SAIb,sBAAKjF,UAAU,QAAf,UACC,uBAAOA,UAAU,QAAQ6E,QAAQ,WAAjC,uBAGA,qBAAK7E,UAAU,UAAf,SACC,uBACCA,UAAU,QACVyD,KAAK,WACLW,KAAK,WACLc,YAAY,oBACZJ,SAAUtE,KAAKuE,cAAcH,KAAKpE,MAClCwE,UAAW,EACXC,UAAU,MAGZ,sBAAKjF,UAAU,QAAf,UACC,qBAAKA,UAAU,aAAf,SACC,mBAAGA,UAAU,qBAAb,SACC,cAAC,IAAD,CAAME,GAAG,SAAT,iDAKF,uBACCF,UAAU,kCACVyD,KAAK,SACLY,MAAM,8B,GA9EOc,IAAMhF,YC2FdiD,I,4MA1FdY,MAAQ,CACP1B,SAAU,GACVC,SAAU,I,mDAGX,SAAsB0B,GACrBzD,KAAK0D,SAAL,eACED,EAAME,cAAcC,KAAOH,EAAME,cAAcE,U,2BAIlD,SAAsBJ,GAAoC,IAAD,OACxDA,EAAMK,iBAENC,EAAea,UAAU5E,KAAKwD,MAAM1B,SAAU9B,KAAKwD,MAAMzB,UAAUE,MAClE,SAAC4C,QACwBxG,IAApBwG,IACHtD,QAAQuD,IAAID,GAEkB,KAA1BA,EAAgBnC,QACnBK,EAAY,yBAA0B,cAGtC,EAAK9C,MAAM4C,QAAQoB,KAAK,Y,oBAO7B,WACC,OACC,qBAAKzE,UAAU,8BAAf,SACC,qBAAKA,UAAU,6CAAf,SACC,qBAAKA,UAAU,wBAAf,SACC,uBACCA,UAAU,MACV0E,SAAUlE,KAAKmE,cAAcC,KAAKpE,MAFnC,UAGC,mBAAGR,UAAU,aAAb,mBACA,sBAAKA,UAAU,QAAf,UACC,uBAAOA,UAAU,QAAQ6E,QAAQ,WAAjC,uBAGA,qBAAK7E,UAAU,UAAf,SACC,uBACCA,UAAU,QACVyD,KAAK,OACLW,KAAK,WACLU,SAAUtE,KAAKuE,cAAcH,KAAKpE,MAClCwE,UAAW,EACXC,UAAU,SAIb,sBAAKjF,UAAU,QAAf,UACC,uBAAOA,UAAU,QAAQ6E,QAAQ,WAAjC,uBAGA,qBAAK7E,UAAU,UAAf,SACC,uBACCA,UAAU,QACVyD,KAAK,WACLW,KAAK,WACLU,SAAUtE,KAAKuE,cAAcH,KAAKpE,MAClCwE,UAAW,EACXC,UAAU,SAIb,sBAAKjF,UAAU,QAAf,UACC,qBAAKA,UAAU,aAAf,SACC,mBAAGA,UAAU,qBAAb,SACC,cAAC,IAAD,CAAME,GAAG,YAAT,qCAKF,uBACCF,UAAU,kCACVyD,KAAK,SACLY,MAAM,2B,GAjFKlE,c,+DCoCLoF,E,4KA/Bd,SAA+BC,GAC9B,OAAQA,EAAaC,UACpB,IAAK,cACJ,OAAO,cAAC,IAAD,IACR,IAAK,UACJ,OAAO,cAAC,IAAD,IACR,IAAK,UACJ,OAAO,cAAC,IAAD,IACR,IAAK,UACJ,OAAO,cAAC,IAAD,IACR,IAAK,WACJ,OAAO,cAAC,IAAD,IACR,IAAK,eACJ,OAAO,cAAC,IAAD,IAER,QACC,OAAO,cAAC,IAAD,O,oBAIV,WACC,OACU,cAAC,IAAYC,SAAb,CAAsBrB,MAAO,CAAErE,UAAW,uBAA1C,SACI,qBAAK2F,cAAY,sBAAjB,SACPnF,KAAKoF,uBAAuBpF,KAAKC,e,GAzBfN,aCSZ0F,E,4JAlBd,WACC,OACC,qBAAK7F,UAAU,YAAY2F,cAAY,iBAAvC,SACC,sBAAK3F,UAAU,uBAAf,UACC,sBAAKA,UAAU,aAAf,UACC,cAAC,EAAD,eAAkBQ,KAAKC,MAAM+E,eAE7B,mBAAGxF,UAAU,kBAAkB2F,cAAY,sBAA3C,SACEnF,KAAKC,MAAM+E,aAAaM,yBAG3B,wBAAQ9F,UAAU,+BAAlB,wB,GAZqBG,aCEb4F,EAA0D,CACtEC,YAAa,CACZP,SAAU,cACVQ,gBAAiB,cACjBH,oBAAqB,eAEtBI,QAAS,CACRT,SAAU,UACVQ,gBAAiB,UACjBH,oBAAqB,UAEtBK,QAAS,CACRV,SAAU,UACVQ,gBAAiB,UACjBH,oBAAqB,OAEtBM,QAAS,CACRX,SAAU,UACVQ,gBAAiB,UACjBH,oBAAqB,UAEtBO,SAAU,CACTZ,SAAU,WACVQ,gBAAiB,WACjBH,oBAAqB,QAEtBQ,aAAc,CACbb,SAAU,eACVQ,gBAAiB,eACjBH,oBAAqB,sBAIRC,ICvBR,SAASQ,EAAmCC,GAClD,MAAO,CACN7D,GAAI6D,EAAiB7D,GACrB6C,aAAcO,EAAcS,EAAiBhB,aAAaiB,YAC1D1D,aAAc,IAAI1D,KAAKmH,EAAiBzD,aAAa0D,YACrDC,OAAQF,EAAiBE,Q,4DCVpB,SAASC,GAAUpH,GACzB,IAAIqH,EAAIrH,EAAKsH,UACTC,EAAIvH,EAAKwH,WAAa,EAE1B,OADQxH,EAAKyH,cACG,KAAOF,GAAK,EAAI,IAAMA,EAAIA,GAAK,KAAOF,GAAK,EAAI,IAAMA,EAAIA,GAGnE,SAASK,GAAqB1H,GAQpC,IAPA,IAAI2H,EAAmB,GAEjBC,EAAiBC,YAAY7H,EAAM,CAAE8H,aAAc,IACnDC,EAAgBC,YAAUhI,EAAM,CAAE8H,aAAc,IAElDG,EAAcL,EAEXK,EAAcF,GACpBJ,EAASzC,KAAK+C,GACdA,EAAcC,YAAQD,EAAa,GAGpC,OAAON,EASD,SAASQ,GACfnI,GAOA,IALA,IAAIiI,EAAcG,YAAapI,GACzBqI,EAAUC,YAAWtI,GAEvBuI,EAAsC,GAEnCC,YAASP,EAAaI,IAC5BE,EAAYrD,KAAK,CAChBuD,aAAcC,YAAQT,EAAa,CAAEH,aAAc,IACnDa,eAAgBd,YAAYI,EAAa,CAAEH,aAAc,IACzDc,aAAcZ,YAAUC,EAAa,CAAEH,aAAc,MAGtDG,EAAcY,YAASZ,EAAa,GAGrC,OAAOM,E,ICHO,O,0JA9Cd,WACCO,EACAT,GAFD,kGAKyBpF,EAAWlB,IAAI,CACrCF,KAAK,yBAAD,OAA2BuF,GAC9B0B,GADG,oBAES1B,GAAUiB,MAR1B,cAKQ5F,EALR,OAWQsG,EAAatG,EAASa,KAAK0F,KAChC,SAACC,GACA,OAAOjC,EAAmCiC,MAb9C,kBAiBSvG,QAAQgB,QAAQqF,IAjBzB,yDAmBSrG,QAAQC,OAAR,OAnBT,yD,oIAuBA,WACCsD,EACAjG,GAFD,kGAKyBiD,EAAWd,KAAK,CACtCN,KAAM,cACNC,YAAY,EACZI,KAAM,CACLgH,SAAUjD,EACVzC,aAAc4D,GAAUpH,MAV5B,cAKQyC,EALR,OAcQwG,EAAWjC,EAAmCvE,EAASa,MAd/D,kBAgBSZ,QAAQgB,QAAQuF,IAhBzB,yDAkBSvG,QAAQC,OAAR,OAlBT,yD,iEChCM,SAASwG,GAAuBrE,GACtC,YAAcxF,IAAVwF,IACU,OAAVA,IACkB,KAAlBsE,OAAOtE,KACW,YAAlBsE,OAAOtE,KAEU,kBAAVA,GACI,IAAVA,M,IC4HSuE,G,4MAxHd5E,MAAQ,CACP6E,gCAAiC,GACjCC,8BAA+B,IAC/BC,4BAA4B,G,2EAG7B,WACC,IAAIC,EAAgB,GACpB,IAAK,IAAMC,KAAOlD,EACjBiD,EAAcvE,KACb,wBAECkB,cAAY,6CACZtB,MAAO0B,EAAckD,GAAKxD,SAH3B,SAIEM,EAAckD,GAAKhD,iBAJrB,eACcF,EAAckD,GAAKxD,YAQnC,OAAOuD,I,wCAGR,SACC/E,GAEAzD,KAAK0D,SAAS,CACb2E,gCAAiC5E,EAAMiF,OAAO7E,U,kFAIhD,WACCJ,GADD,oEAGCA,EAAMK,iBACNvC,QAAQuD,IAAI9E,KAAKwD,MAAM6E,iCAErBH,GAAuBlI,KAAKwD,MAAM6E,iCANrC,iEAWOM,GAAmBC,uBACxB5I,KAAKwD,MAAM6E,gCACXrI,KAAKC,MAAM+G,aAbb,OAeCzF,QAAQuD,IAAI,UAAW9E,KAAKC,MAAM4I,oBAElC7I,KAAKC,MAAM4I,qBAjBZ,gD,wGAoBA,SAA4CpF,GAC3CA,EAAMK,iBAEF9D,KAAKwD,MAAM+E,2BACdvI,KAAK0D,SAAS,CACb6E,4BAA4B,EAC5BD,8BAA+B,MAGhCtI,KAAK0D,SAAS,CACb6E,4BAA4B,EAC5BD,8BAA+B,Q,oBAKlC,WACC,OACC,sBAAK9I,UAAU,2FAAf,UACC,qBACC2F,cAAY,0BACZ3F,UAAS,sCACRQ,KAAKwD,MAAM+E,2BACR,GACA,gBALL,SAOC,uBACC/I,UAAU,MACV2F,cAAY,wBACZjB,SAAUlE,KAAK8I,8BAA8B1E,KAC5CpE,MAJF,UAMC,mBAAGR,UAAU,aAAb,0BACA,qBAAKA,UAAU,iBAAf,SACC,yBACCoE,KAAK,gBACLuB,cAAY,sCACZb,SAAUtE,KAAK+I,2BAA2B3E,KACzCpE,MAEDgJ,aAAa,UANd,UAOC,wBACC7D,cAAY,6CAEZtB,MAAM,UAHP,uCAEK,gBAIJ7D,KAAKiJ,6CAGR,uBACCzJ,UAAU,iBACV2F,cAAY,sCACZlC,KAAK,SACLY,MAAM,gBAGT,wBACCqF,QAASlJ,KAAKmJ,oCAAoC/E,KACjDpE,MAEDmF,cAAY,sBACZ3F,UAAU,iEALX,SAMEQ,KAAKwD,MAAM8E,uC,GAlHiB3I,a,SCgInByJ,G,kDA1Hd,WAAYnJ,GAAY,IAAD,8BACtB,cAAMA,IAEDuD,MAAQ,CACZwD,YAAa,IAAInI,KACjBiJ,WAAY,GACZuB,iBAAiB,GANI,E,qDAUvB,WACCrJ,KAAKsJ,4B,qCAGN,WAAmC,IAAD,OAC3BC,EAAuB9C,GAC5BzG,KAAKwD,MAAMwD,aAGZ2B,GAAmBa,oCAClBD,EAAqB,GACrBA,EAAqBA,EAAqBE,OAAS,IAClDxH,MAAK,SAAC6F,GACP,EAAKpE,SAAS,CAAEoE,WAAYA,S,qEAI9B,WAAmE,IAAD,OACjE,OAAOrB,GAAqBzG,KAAKwD,MAAMwD,aAAae,KACnD,SAAC2B,EAASC,GAET,IAAMC,EAAW,EAAKpG,MAAMsE,WAAW+B,QAEtC,SAACC,GAAD,OAASC,YAAUD,EAAIvH,aAAcmH,MAGtC,OAAIE,EAASH,OAAS,EAGpB,sBACCjK,UAAU,MACV2F,cAAY,sBAFb,UAIC,mBAAG3F,UAAU,qBAAb,mBAAsCwK,YACrCJ,EAAS,GAAGrH,aACZ,UACA,CAAEsE,aAAc,OAEhB+C,EAAS7B,KAAI,SAACC,EAAUiC,GAAX,OACb,wBAAC,EAAD,2BACKjC,GADL,IAECS,IAAG,mBAAcwB,EAAYhE,oBAZhC,mBAGkB0D,EAAU1D,aAevB,U,+BAKV,SAA0BiE,GACrBC,MAAMC,QAAQF,IACjBlK,KAAK0D,SAAS,CAAEsD,YAAakD,EAAiB,KAC9ClK,KAAK0D,SAAS,CAAE2F,iBAAiB,MAEjCrJ,KAAK0D,SAAS,CAAEsD,YAAakD,IAC7BlK,KAAK0D,SAAS,CAAE2F,iBAAiB,O,sCAInC,SAAiC5F,GAChCA,EAAMK,iBAEN9D,KAAK0D,SAAS,CAAE2F,iBAAkBrJ,KAAKwD,MAAM6F,oB,oBAG9C,WACC,OACC,sBAAK7J,UAAU,cAAf,UACC,qBAAKA,UAAU,sBAAf,SACC,sBACCA,UAAU,uBACV2F,cAAY,kBAFb,UAGC,mBAAG3F,UAAU,aAAb,mBACK6K,YAAQrK,KAAKwD,MAAMwD,gBAExB,sBAAKxH,UAAU,gCAAf,UACC,wBACCA,UAAU,kCACV0J,QAASlJ,KAAKsK,yBAAyBlG,KAAKpE,MAF7C,sBAGQyH,YAAQzH,KAAKwD,MAAMwD,YAAa,CACtCH,aAAc,OAGhB,cAAC,KAAD,CACCrH,UAAS,mDACRQ,KAAKwD,MAAM6F,gBACR,GACA,aAEJkB,UAAU,OACVC,iBAAiB,EACjBlG,SAAUtE,KAAKyK,kBAAkBrG,KAAKpE,MACtC6D,MAAO7D,KAAKwD,MAAMwD,iBAGpB,qBAAKxH,UAAU,OAAf,SACEQ,KAAK0K,iEAIT,cAAC,GAAD,CACC1D,YAAahH,KAAKwD,MAAMwD,YACxB6B,mBAAoB7I,KAAKsJ,wBAAwBlF,KAAKpE,e,GApHlCL,a,kBC6CVgL,G,wLAtDd,WACC,IACC,OAAQ3K,KAAKC,MAAM2K,gBAAgBC,YAClC,IAAK,YACJ,MAAO,+BACR,IAAK,SACJ,MAAO,8BAER,QACC,MAAO,IAER,MAAOzJ,GACR,MAAO,gC,oBAIT,WACC,OACC,qBAAK5B,UAAU,YAAf,SACC,sBACCA,UAAS,+BAA0BQ,KAAK8K,sCACxC3F,cAAY,kBAFb,UAGC,sBAAK3F,UAAU,aAAf,UACC,cAAC,EAAD,eAAkBQ,KAAKC,MAAM+E,eAC7B,mBACCxF,UAAU,kBACV2F,cAAY,gCAFb,SAGEnF,KAAKC,MAAM+E,aAAaS,qBAG3B,qBAAKjG,UAAU,yBAAf,SACC,gCACC,oBAAGA,UAAU,gBAAb,UACEQ,KAAKC,MAAM8K,kBADb,IAEEC,aACAhL,KAAKC,MAAMgL,eACXjL,KAAKC,MAAM4H,UACX,CAAEhB,aAAc,IACb7G,KAAKC,MAAMiL,kBAEhB,oBAAG1L,UAAU,gBAAb,qBAEEiI,YAAQzH,KAAKC,MAAMgL,eAAgB,CACnCpE,aAAc,qB,GA5CIlH,aCAdwL,GAAiE,CAC7EC,YAAa,CACZP,WAAY,cACZQ,kBAAmB,eAEpBC,UAAW,CACVT,WAAY,YACZQ,kBAAmB,aAEpBE,OAAQ,CACPV,WAAY,SACZQ,kBAAmB,WCSd,SAASG,GAAqCC,GACpD,MAAO,CACNtJ,GAAIsJ,EAAkBtJ,GACtB6C,aAAcO,EAAckG,EAAkBzG,cAC9CkG,eAAgBQ,OAAOD,EAAkBP,gBACzCH,kBAAmBW,OAAOD,EAAkBV,mBAC5ClD,UAAW,IAAIhJ,KAAK4M,EAAkB5D,WACtCoD,eAAgB,IAAIpM,KAAK4M,EAAkBR,gBAC3CL,gBAAiBO,GAAkBM,EAAkBb,iBACrD1E,OAAQuF,EAAkBvF,Q,ICwBb,O,0JAjDd,WACC2B,EACAT,GAFD,kGAKyBpF,EAAWlB,IAAI,CACrCF,KAAK,yBAAD,OAA2BuF,GAC9B0B,GADG,oBAES1B,GAAUiB,MAR1B,cAKQ5F,EALR,OAWQmK,EAAqBnK,EAASa,KAAK0F,KACxC,SAAC6D,GAAD,OACCJ,GAAqCI,MAbzC,kBAgBSnK,QAAQgB,QAAQkJ,IAhBzB,yDAkBSlK,QAAQC,OAAR,OAlBT,yD,qIAsBA,WACCsD,EACAkG,EACAW,GAHD,kGAMyB7J,EAAWd,KAAK,CACtCN,KAAM,cACNC,YAAY,EACZI,KAAM,CACL6K,iBAAkB9G,EAClBkG,eAAgBA,EAChBa,cAAeF,KAZnB,cAMQrK,EANR,OAgBQoK,EAAYJ,GACjBhK,EAASa,MAjBZ,kBAoBSZ,QAAQgB,QAAQmJ,IApBzB,yDAsBSnK,QAAQC,OAAR,OAtBT,yD,mECiNcsK,G,4MAvNdxI,MAAQ,CACPyI,kCAAmC,CAClCjH,aAAc,GACdkH,WAAY,EACZC,cAAe,GAEhBC,+BAAgC,IAChCC,6BAA6B,G,0EAG9B,SACC5I,GAEAzD,KAAK0D,SAAS,CACbuI,kCAAmC,CAClCjH,aAAcvB,EAAMiF,OAAO7E,MAC3BqI,WAAYlM,KAAKwD,MAAMyI,kCACrBC,WACFC,cAAenM,KAAKwD,MAAMyI,kCACxBE,mB,gDAIL,SACC1I,GAEAzD,KAAK0D,SAAS,CACbuI,kCAAmC,CAClCjH,aAAchF,KAAKwD,MAAMyI,kCACvBjH,aACFkH,WAAYR,OAAOjI,EAAME,cAAcE,OACvCsI,cAAenM,KAAKwD,MAAMyI,kCACxBE,mB,mDAIL,SACC1I,GAEAzD,KAAK0D,SAAS,CACbuI,kCAAmC,CAClCjH,aAAchF,KAAKwD,MAAMyI,kCACvBjH,aACFkH,WAAYlM,KAAKwD,MAAMyI,kCACrBC,WACFC,cAAeT,OAAOjI,EAAME,cAAcE,Y,gEAK7C,WACC,IAAI2E,EAAgB,GACpB,IAAK,IAAMC,KAAOlD,EACjBiD,EAAcvE,KACb,wBAECJ,MAAO0B,EAAckD,GAAKxD,SAC1BE,cAAY,8CAHb,SAIEI,EAAckD,GAAKhD,iBAJrB,sCACqCF,EAAckD,GAAKxD,YAQ1D,OAAOuD,I,yFAGR,WACC/E,GADD,oEAGCA,EAAMK,iBAGJoE,GACAlI,KAAKwD,MAAMyI,kCAAkCjH,eAE7CkD,GACAlI,KAAKwD,MAAMyI,kCAAkCC,aAE7ChE,GACAlI,KAAKwD,MAAMyI,kCAAkCE,eAbhD,iEAmBOG,GAAoBC,wBACzBvM,KAAKwD,MAAMyI,kCAAkCjH,aAC7ChF,KAAKwD,MAAMyI,kCAAkCC,WAC7ClM,KAAKwD,MAAMyI,kCAAkCE,eAtB/C,OAyBCnM,KAAKC,MAAM4I,qBAzBZ,gD,yGA4BA,SAA6CpF,GAC5CA,EAAMK,iBAEF9D,KAAKwD,MAAM6I,4BACdrM,KAAK0D,SAAS,CACb2I,6BAA6B,EAC7BD,+BAAgC,MAGjCpM,KAAK0D,SAAS,CACb2I,6BAA6B,EAC7BD,+BAAgC,Q,oBAKnC,WACC,OACC,sBAAK5M,UAAU,2FAAf,UACC,qBACCA,UAAS,sCACRQ,KAAKwD,MAAM6I,4BACR,GACA,gBAJL,SAMC,uBACC7M,UAAU,MACV0E,SAAUlE,KAAKwM,qCAAqCpI,KACnDpE,MAEDmF,cAAY,yBALb,UAMC,mBAAG3F,UAAU,aAAb,2BAEA,sBAAKA,UAAU,QAAf,UACC,uBACCA,UAAU,QACV6E,QAAQ,8BAFT,8BAKA,qBAAK7E,UAAU,iBAAf,SACC,yBACCoE,KAAK,8BACLoF,aAAa,UACb1E,SAAUtE,KAAKyM,qCAAqCrI,KACnDpE,MAEDmF,cAAY,uCANb,UAOC,wBAECtB,MAAM,UACNsB,cAAY,8CAHb,uCACK,gBAKJnF,KAAK0M,6DAKT,sBAAKlN,UAAU,QAAf,UACC,uBACCA,UAAU,QACV6E,QAAQ,4BAFT,iCAKA,qBAAK7E,UAAU,UAAf,SACC,uBACCA,UAAU,aACVyD,KAAK,SACL0J,IAAI,IACJC,IAAI,KACJhJ,KAAK,4BACLc,YAAY,UACZD,UAAU,EACVU,cAAY,oCACZb,SAAUtE,KAAK6M,mCAAmCzI,KACjDpE,aAKJ,sBAAKR,UAAU,QAAf,UACC,uBACCA,UAAU,QACV6E,QAAQ,gCAFT,8BAKA,qBAAK7E,UAAU,UAAf,SACC,uBACCA,UAAU,aACVyD,KAAK,SACL0J,IAAI,IACJ/I,KAAK,gCACLa,UAAU,EACVH,SAAUtE,KAAK8M,sCAAsC1I,KACpDpE,aAKJ,uBACCR,UAAU,sBACVyD,KAAK,SACLY,MAAM,gBAIT,qBAAKrE,UAAU,wCAAf,SACC,wBACC0J,QAASlJ,KAAK+M,qCAAqC3I,KAClDpE,MAEDR,UAAU,2BACV2F,cAAY,uBALb,SAMEnF,KAAKwD,MAAM4I,0C,GAnNiBzM,aC4FpBqN,G,kDA/Fd,WAAY/M,GAA4C,IAAD,8BACtD,cAAMA,IAEDuD,MAAQ,CACZwD,YAAa,IAAInI,KACjBoO,qBAAsB,GACtBC,WAAY,IANyC,E,qDAUvD,WACKlN,KAAKC,MAAM+G,aACdhH,KAAK0D,SAAS,CAAEsD,YAAahH,KAAKC,MAAM+G,cAEzChH,KAAKmN,4B,qCAGN,WAAmC,IAAD,OAC3BC,EAAiClG,GACtClH,KAAKwD,MAAMwD,aAGZsF,GAAoBe,oCACnBD,EAA+B,GAAG1F,eAClC0F,EACCA,EAA+B3D,OAAS,GACvC9B,cACD1F,MAAK,SAACiL,GACP,EAAKxJ,SAAS,CAAEwJ,WAAYA,S,4EAI9B,WAA0E,IAAD,OACxE,OAAOhG,GAAoClH,KAAKwD,MAAMwD,aAAae,KAClE,SAACuF,GACA,IAAM1D,EAAW,EAAKpG,MAAM0J,WAAWrD,QAAO,SAAC+B,GAAD,OAC7C2B,aACC3B,EAAU/D,UACVyF,EAAmB5F,eACnB,CAAEb,aAAc,OAIlB,OAAI+C,EAASH,OAAS,EAEpB,sBACCjK,UAAU,MACV2F,cAAY,uBAFb,UAIC,mBAAG3F,UAAU,qBAAb,iCAAoDiI,YACnDmC,EAAS,GAAG/B,UACZ,CAAEhB,aAAc,OAEhB+C,EAAS7B,KAAI,SAAC6D,EAAW4B,GAAZ,OACb,wBAAC,GAAD,2BACK5B,GADL,IAECnD,IAAG,mBAAc+E,EAAMvH,oBAX1B,wBAGuBqH,EAAmB9F,aAAavB,aAclD,U,oBAKV,WACC,OACC,sBAAKzG,UAAU,cAAf,UACC,qBAAKA,UAAU,sBAAf,SACC,sBACCA,UAAU,uBACV2F,cAAY,kBAFb,UAGC,sBAAK3F,UAAU,QAAf,UACC,mBAAGA,UAAU,wBAAb,SACEQ,KAAKwD,MAAMwD,YAAYR,gBAEzB,wBAAQhH,UAAU,qBAAlB,uBAID,qBAAKA,UAAU,OAAf,SACEQ,KAAKyN,wEAIT,cAAC,GAAD,CACC5E,mBAAoB7I,KAAKmN,wBAAwB/I,KAAKpE,e,GA5FlCL,aCKV+N,G,mKAfd,WAGO,OAFNvP,aAAamB,WAAW,eAEX,cAAC,IAAD,CAAUI,GAAG,a,oBAG3B,WACC,OACC,qBAAKF,UAAU,SAAf,SACEQ,KAAK2N,sB,GAVWhO,aCuBNiO,OAhBf,WACC,OACC,eAAC,IAAD,CAAYC,SAAUC,YAAtB,UACC,qBAAK3L,GAAG,oBACR,eAAC,IAAD,WACC,cAAC,EAAD,CAAa4L,OAAK,EAACnN,KAAK,YAAYV,UAAW8N,IAC/C,cAAC,EAAD,CAAaD,OAAK,EAACnN,KAAK,SAASV,UAAW+N,IAE5C,cAAC,EAAD,CAAcF,OAAK,EAACnN,KAAK,IAAIV,UAAWkJ,KACxC,cAAC,EAAD,CAAc2E,OAAK,EAACnN,KAAK,cAAcV,UAAW8M,KAClD,cAAC,EAAD,CAAce,OAAK,EAACnN,KAAK,UAAUV,UAAWwN,YCNnCQ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnM,MAAK,YAAkD,IAA/CoM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAG1BZ,O","file":"static/js/main.1e19ead9.chunk.js","sourcesContent":["import { isAfter } from 'date-fns';\n\ninterface JWTAccessTokenPayload {\n\tuser_id: string;\n\tusername: string;\n\tiat: string;\n\texp: JWTDateTime;\n}\n\ninterface JWTDateTime {\n\tdate: JWTDate;\n\ttime: JWTTime;\n}\ninterface JWTDate {\n\tyear: number;\n\tmonth: number;\n\tday: number;\n}\ninterface JWTTime {\n\thour: number;\n\tminute: number;\n\tsecond: number;\n\tnano: number;\n}\n\nexport function isAuthTokenValid(): boolean {\n\tconst authToken = localStorage.getItem('accessToken');\n\n\tif (authToken === undefined || authToken == null) return false; //no token found\n\n\tconst splitToken = authToken.split('.');\n\tconst decodedPayload = JSON.parse(\n\t\tatob(splitToken[1])\n\t) as JWTAccessTokenPayload;\n\n\tif (\n\t\tisAfter(\n\t\t\tnew Date(),\n\t\t\tnew Date(\n\t\t\t\tdecodedPayload.exp.date.year,\n\t\t\t\tdecodedPayload.exp.date.month,\n\t\t\t\tdecodedPayload.exp.date.day,\n\t\t\t\tdecodedPayload.exp.time.hour,\n\t\t\t\tdecodedPayload.exp.time.minute\n\t\t\t)\n\t\t)\n\t) {\n\t\tlocalStorage.removeItem('accessToken');\n\t\treturn false; //token has expired\n\t}\n\n\treturn true; //token is valid\n}\n","import { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NavigationMenu extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='navbar-item has-dropdown is-hoverable'>\n\t\t\t\t<a className='navbar-link' href='#/'>\n\t\t\t\t\tMenu\n\t\t\t\t</a>\n\n\t\t\t\t<div className='navbar-dropdown'>\n\t\t\t\t\t<Link to='/' className='navbar-item'>\n\t\t\t\t\t\tActivities\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to='/challenges' className='navbar-item'>\n\t\t\t\t\t\tChallenges\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to='/' className='navbar-item is-hidden'>\n\t\t\t\t\t\tAccount\n\t\t\t\t\t</Link>\n\t\t\t\t\t<hr className='navbar-divider' />\n\t\t\t\t\t<Link to='/logout' className='navbar-item'>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NavigationMenu;\n","import { Component } from 'react';\nimport NavigationMenu from './NavigationMenu';\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className='navbar' role='navigation'>\n\t\t\t\t<div className='navbar-brand'>\n\t\t\t\t\t<NavigationMenu />\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import { Redirect, Route } from 'react-router';\nimport { isAuthTokenValid } from './common/AuthUtils';\nimport Navbar from './ui/Navbar/Navbar';\n\nclass PrivateRoute extends Route {\n\tprivate authPath: string = '/login';\n\n\trender() {\n\t\tif (isAuthTokenValid()) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Route {...this.props} />\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\tconst routeComponent = () => <Redirect to={this.authPath} />;\n\t\t\treturn <Route {...this.props} component={routeComponent} />;\n\t\t}\n\t}\n}\n\nexport default PrivateRoute;\n","import { Redirect, Route } from 'react-router';\nimport { isAuthTokenValid } from './common/AuthUtils';\n\nclass PublicRoute extends Route{\n\tprivate homePath = '/';\n\n\trender() {\n\t\tif (isAuthTokenValid()) {\n\t\t\tconst routeComponent = () => <Redirect to={this.homePath} />;\n\t\t\treturn (\n\t\t\t\t<Route\n\t\t\t\t\t{...this.props}\n\t\t\t\t\tcomponent={routeComponent}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <Route {...this.props} />;\n\t\t}\n\t}\n}\n\nexport default PublicRoute;\n","import axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios';\n\nclass HttpClient {\n\tprivate apiClient: AxiosInstance = axios.create({\n\t\tbaseURL: 'http://localhost:8080/api',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tresponseType: 'json',\n\t});\n\n\tpublic async get({\n\t\tpath,\n\t\tauthorized = true,\n\t}: {\n\t\tpath: string;\n\t\tauthorized?: boolean;\n\t}): Promise<AxiosResponse> {\n\t\ttry {\n\t\t\treturn await this.apiClient.get(\n\t\t\t\tpath,\n\t\t\t\tauthorized ? { headers: this.getAuthHeaderFromStorage() } : {}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\treturn this.handleError(err);\n\t\t}\n\t}\n\n\tpublic async post({\n\t\tpath,\n\t\tauthorized = true,\n\t\tbody,\n\t}: {\n\t\tpath: string;\n\t\tauthorized: boolean;\n\t\tbody: Object;\n\t}): Promise<AxiosResponse> {\n\t\ttry {\n\t\t\treturn await this.apiClient.post(\n\t\t\t\tpath,\n\t\t\t\tbody,\n\t\t\t\tauthorized ? { headers: this.getAuthHeaderFromStorage() } : {}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\treturn this.handleError(err);\n\t\t}\n\t}\n\n\tpublic async delete({ path }: { path: string }): Promise<AxiosResponse> {\n\t\ttry {\n\t\t\treturn await this.apiClient.delete(path, {\n\t\t\t\theaders: this.getAuthHeaderFromStorage(),\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn this.handleError(err);\n\t\t}\n\t}\n\n\tprivate handleError(error: any): Promise<any> {\n\t\tif (axios.isAxiosError(error)) {\n\t\t\tlet axiosError: AxiosError<any> = error;\n\t\t\tconsole.error(axiosError.response);\n\t\t} else {\n\t\t\tconsole.error(error);\n\t\t}\n\n\t\treturn Promise.reject(error);\n\t}\n\n\tprivate getAuthHeaderFromStorage(): { Authorization: string } {\n\t\tconst authHeaderPrefix = 'Bearer ';\n\t\tconst accessToken = localStorage.getItem('accessToken');\n\n\t\tif (accessToken === undefined || accessToken == null) {\n\t\t\tthrow new Error('No Auth header found in localStorage');\n\t\t} else {\n\t\t\treturn { Authorization: authHeaderPrefix + accessToken };\n\t\t}\n\t}\n}\n\nexport default new HttpClient();\n","import HttpClient from './HttpClient';\nimport { User, UserResponse, userFromUserResponseObject } from '../domain/User';\n\nclass UserAPIService {\n\tpublic async registerUser(\n\t\tusername: string,\n\t\tpassword: string\n\t): Promise<User> {\n\t\ttry {\n\t\t\tconst retrievedUser = await HttpClient.post({\n\t\t\t\tpath: '/users',\n\t\t\t\tauthorized: false,\n\t\t\t\tbody: {\n\t\t\t\t\tusername: username,\n\t\t\t\t\tpassword: password,\n\t\t\t\t},\n\t\t\t}).then((res) => {\n\t\t\t\treturn userFromUserResponseObject(res.data as UserResponse);\n\t\t\t});\n\n\t\t\treturn Promise.resolve(retrievedUser);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tpublic async loginUser(\n\t\tusername: string,\n\t\tpassword: string\n\t): Promise<{ token: string }> {\n\t\ttry {\n\t\t\tconst response = await HttpClient.post({\n\t\t\t\tpath: '/tokens',\n\t\t\t\tauthorized: false,\n\t\t\t\tbody: {\n\t\t\t\t\tusername: username,\n\t\t\t\t\tpassword: password,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst token = response.data['token'];\n\t\t\tlocalStorage.setItem('accessToken', token);\n\n\t\t\treturn Promise.resolve(response.data);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport default new UserAPIService();\n","export interface User {\n\treadonly id: string;\n\treadonly username: string;\n\treadonly score: string;\n\treadonly creationDate: Date;\n}\n\nexport interface UserResponse {\n\treadonly id: string;\n\treadonly username: string;\n\treadonly score: string;\n\treadonly creationDate: Date;\n}\n\nexport function userFromUserResponseObject(user: UserResponse): User {\n\treturn {\n\t\tid: user.id,\n\t\tusername: user.username,\n\t\tscore: user.score,\n\t\tcreationDate: new Date(user.creationDate)\n\t} as User\n}\n","import { useHistory } from \"react-router-dom\";\n\nexport const withHistoryHook = (Component: any) => {\n\treturn (props: any) => {\n\t\tconst history = useHistory();\n\n\t\treturn <Component history={history} {...props} />;\n\t};\n};","import * as bulmaToast from 'bulma-toast';\nimport 'animate.css';\n\nexport function createToast(message: string, type: bulmaToast.ToastType) {\n\tbulmaToast.toast({\n\t\tmessage: message,\n\t\ttype: type,\n\t\tanimate: { in: 'fadeIn', out: 'fadeOut' },\n\t\tposition: 'top-right',\n\t\tduration: 4000,\n\t});\n}\n","import React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport UserAPIService from '../ports/UserAPIService';\nimport { withHistoryHook } from '../common/HocUtils';\nimport { createToast } from '../common/Toaster';\n\ninterface RegisterProps {\n\thistory: RouteComponentProps['history'];\n}\n\nclass Register extends React.Component<RegisterProps> {\n\tstate = {\n\t\tusername: '',\n\t\tpassword: '',\n\t};\n\n\tprivate changeHandler(event: React.FormEvent<HTMLInputElement>): void {\n\t\tthis.setState({\n\t\t\t[event.currentTarget.name]: event.currentTarget.value,\n\t\t});\n\t}\n\n\tprivate submitHandler(event: React.SyntheticEvent): void {\n\t\tevent.preventDefault();\n\n\t\tUserAPIService.registerUser(\n\t\t\tthis.state.username,\n\t\t\tthis.state.password\n\t\t).then((user) => {\n\t\t\tif (user !== undefined && user.id !== undefined) {\n\t\t\t\tcreateToast('Successfully Registered', 'is-success');\n\n\t\t\t\t//redirect to login page on successful register\n\t\t\t\tthis.props.history.push('/login');\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='hero is-fullpage is-clipped'>\n\t\t\t\t<div className='hero-body columns is-vcentered is-centered'>\n\t\t\t\t\t<div className='column is-one-quarter'>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName='box'\n\t\t\t\t\t\t\tonSubmit={this.submitHandler.bind(this)}>\n\t\t\t\t\t\t\t<p className='title is-4'>Register</p>\n\t\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t\t<label className='label' htmlFor='username'>\n\t\t\t\t\t\t\t\t\tUsername:\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler.bind(this)}\n\t\t\t\t\t\t\t\t\t\tminLength={4}\n\t\t\t\t\t\t\t\t\t\trequired={true}></input>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t\t<label className='label' htmlFor='password'>\n\t\t\t\t\t\t\t\t\tPassword:\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tplaceholder='min. 8 characters'\n\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler.bind(this)}\n\t\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\t\trequired={true}></input>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='level'>\n\t\t\t\t\t\t\t\t\t<div className='level-left'>\n\t\t\t\t\t\t\t\t\t\t<p className='subtitle is-6 mt-5'>\n\t\t\t\t\t\t\t\t\t\t\t<Link to='/login'>\n\t\t\t\t\t\t\t\t\t\t\t\tAlready have an Account? Login!\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='level-right button is-link mt-5'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvalue='Submit'></input>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withHistoryHook(Register);\n","import React, { Component } from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport UserAPIService from '../ports/UserAPIService';\nimport { withHistoryHook } from '../common/HocUtils';\nimport { createToast } from '../common/Toaster';\n\ninterface LoginProps {\n\thistory: RouteComponentProps['history'];\n}\n\nclass Login extends Component<LoginProps> {\n\tstate = {\n\t\tusername: '',\n\t\tpassword: '',\n\t};\n\n\tprivate changeHandler(event: React.FormEvent<HTMLInputElement>): void {\n\t\tthis.setState({\n\t\t\t[event.currentTarget.name]: event.currentTarget.value,\n\t\t});\n\t}\n\n\tprivate submitHandler(event: React.SyntheticEvent): void {\n\t\tevent.preventDefault();\n\n\t\tUserAPIService.loginUser(this.state.username, this.state.password).then(\n\t\t\t(responseMessage) => {\n\t\t\t\tif (responseMessage !== undefined) {\n\t\t\t\t\tconsole.log(responseMessage);\n\n\t\t\t\t\tif (responseMessage.token !== '') {\n\t\t\t\t\t\tcreateToast('Successfully Logged in', 'is-success');\n\n\t\t\t\t\t\t//redirect on successful login\n\t\t\t\t\t\tthis.props.history.push('/');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='hero is-fullpage is-clipped'>\n\t\t\t\t<div className='hero-body columns is-vcentered is-centered'>\n\t\t\t\t\t<div className='column is-one-quarter'>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName='box'\n\t\t\t\t\t\t\tonSubmit={this.submitHandler.bind(this)}>\n\t\t\t\t\t\t\t<p className='title is-4'>Login</p>\n\t\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t\t<label className='label' htmlFor='username'>\n\t\t\t\t\t\t\t\t\tUsername:\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler.bind(this)}\n\t\t\t\t\t\t\t\t\t\tminLength={4}\n\t\t\t\t\t\t\t\t\t\trequired={true}></input>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t\t<label className='label' htmlFor='password'>\n\t\t\t\t\t\t\t\t\tPassword:\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler.bind(this)}\n\t\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\t\trequired={true}></input>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='level'>\n\t\t\t\t\t\t\t\t<div className='level-left'>\n\t\t\t\t\t\t\t\t\t<p className='subtitle is-6 mt-5'>\n\t\t\t\t\t\t\t\t\t\t<Link to='/register'>\n\t\t\t\t\t\t\t\t\t\t\tNew? Register Here!\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='level-right button is-link mt-5'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Submit'></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withHistoryHook(Login);\n","import {\n\tFaSwimmer,\n\tFaBiking,\n\tFaWalking,\n\tFaRunning,\n\tFaDumbbell,\n} from 'react-icons/fa';\nimport { CgGlassAlt } from 'react-icons/cg';\nimport { VscError } from 'react-icons/vsc';\n\nimport { ActivityType } from '../domain/ActivityType';\nimport { Component } from 'react';\nimport { IconContext } from 'react-icons/lib';\n\nclass ActivityIcon extends Component<ActivityType> {\n\tprivate setIconForActivityType(activityType: ActivityType) {\n\t\tswitch (activityType.typeText) {\n\t\t\tcase 'DRINK_WATER':\n\t\t\t\treturn <CgGlassAlt />;\n\t\t\tcase 'WALKING':\n\t\t\t\treturn <FaWalking />;\n\t\t\tcase 'RUNNING':\n\t\t\t\treturn <FaRunning />;\n\t\t\tcase 'CYCLING':\n\t\t\t\treturn <FaBiking />;\n\t\t\tcase 'SWIMMING':\n\t\t\t\treturn <FaSwimmer />;\n\t\t\tcase 'CALISTHENICS':\n\t\t\t\treturn <FaDumbbell />;\n\n\t\t\tdefault:\n\t\t\t\treturn <VscError />;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n            <IconContext.Provider value={{ className: 'icon is-medium mt-2' }}>\n                <div data-testid='activity_entry_icon'>\n\t\t\t\t    {this.setIconForActivityType(this.props)}\n\t\t\t    </div>\n            </IconContext.Provider>\n\t\t);\n\t}\n}\n\nexport default ActivityIcon;","import { Component } from 'react';\nimport { Activity } from '../../domain/Activity';\nimport ActivityIcon from '../ActivityIcon';\n\nclass ActivitySub extends Component<Activity> {\n\trender() {\n\t\treturn (\n\t\t\t<div className='field row' data-testid='activity_entry'>\n\t\t\t\t<div className='box level is-grouped'>\n\t\t\t\t\t<div className='level-left'>\n\t\t\t\t\t\t<ActivityIcon {...this.props.activityType} />\n\t\t\t\t\t\t\n\t\t\t\t\t\t<p className='title is-5 ml-3' data-testid='activity_entry_type'>\n\t\t\t\t\t\t\t{this.props.activityType.typeDescriptionPast}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<button className='level-right button is-danger'>-</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ActivitySub;\n","export interface ActivityType {\n\treadonly typeText: string;\n\treadonly typeDescription: string;\n\treadonly typeDescriptionPast: string;\n}\n\nexport const ActivityTypes: { readonly [key: string]: ActivityType } = {\n\tDRINK_WATER: {\n\t\ttypeText: 'DRINK_WATER',\n\t\ttypeDescription: 'Drink Water',\n\t\ttypeDescriptionPast: 'Drank Water',\n\t},\n\tWALKING: {\n\t\ttypeText: 'WALKING',\n\t\ttypeDescription: 'Walking',\n\t\ttypeDescriptionPast: 'Walked',\n\t},\n\tRUNNING: {\n\t\ttypeText: 'RUNNING',\n\t\ttypeDescription: 'Running',\n\t\ttypeDescriptionPast: 'Ran',\n\t},\n\tCYCLING: {\n\t\ttypeText: 'CYCLING',\n\t\ttypeDescription: 'Cycling',\n\t\ttypeDescriptionPast: 'Cycled',\n\t},\n\tSWIMMING: {\n\t\ttypeText: 'SWIMMING',\n\t\ttypeDescription: 'Swimming',\n\t\ttypeDescriptionPast: 'Swam',\n\t},\n\tCALISTHENICS: {\n\t\ttypeText: 'CALISTHENICS',\n\t\ttypeDescription: 'Calisthenics',\n\t\ttypeDescriptionPast: 'Done Calisthenics',\n\t},\n};\n\nexport default ActivityTypes","import { ActivityType, ActivityTypes } from './ActivityType';\n\nexport interface Activity {\n\treadonly id: string;\n\treadonly activityType: ActivityType;\n\treadonly creationDate: Date;\n\treadonly userID: string;\n}\n\nexport interface ActivityResponse {\n\treadonly id: string;\n\treadonly activityType: string;\n\treadonly creationDate: string;\n\treadonly userID: string;\n}\n\nexport function activityFromActivityResponseObject(activityResponse: ActivityResponse): Activity {\n\treturn {\n\t\tid: activityResponse.id,\n\t\tactivityType: ActivityTypes[activityResponse.activityType.toString()],\n\t\tcreationDate: new Date(activityResponse.creationDate.toString()),\n\t\tuserID: activityResponse.userID,\n\t} as Activity;\n}\n","import {\n\taddDays,\n\taddWeeks,\n\tendOfMonth,\n\tendOfWeek,\n\tgetWeek,\n\tisBefore,\n\tstartOfMonth,\n\tstartOfWeek,\n} from 'date-fns';\n\nexport function dateToYMD(date: Date) {\n\tvar d = date.getDate();\n\tvar m = date.getMonth() + 1; //Month from 0 to 11\n\tvar y = date.getFullYear();\n\treturn '' + y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\n}\n\nexport function eachDayOfWeekForDate(date: Date): Date[] {\n\tlet dayRange: Date[] = [];\n\n\tconst firstDayOfWeek = startOfWeek(date, { weekStartsOn: 1 });\n\tconst lastDayOfWeek = endOfWeek(date, { weekStartsOn: 1 });\n\n\tlet currentDate = firstDayOfWeek;\n\n\twhile (currentDate < lastDayOfWeek) {\n\t\tdayRange.push(currentDate);\n\t\tcurrentDate = addDays(currentDate, 1);\n\t}\n\n\treturn dayRange;\n}\n\ninterface CalendarWeekStartEnd {\n\treadonly calendarWeek: number;\n\treadonly startingOfWeek: Date;\n\treadonly endingOfWeek: Date;\n}\n\nexport function eachCalendarWeekRangeInMonthForDate(\n\tdate: Date\n): CalendarWeekStartEnd[] {\n\tlet currentDate = startOfMonth(date);\n\tconst endDate = endOfMonth(date);\n\n\tlet returnValue: CalendarWeekStartEnd[] = [];\n\n\twhile (isBefore(currentDate, endDate)) {\n\t\treturnValue.push({\n\t\t\tcalendarWeek: getWeek(currentDate, { weekStartsOn: 1 }),\n\t\t\tstartingOfWeek: startOfWeek(currentDate, { weekStartsOn: 1 }),\n\t\t\tendingOfWeek: endOfWeek(currentDate, { weekStartsOn: 1 }),\n\t\t});\n\n\t\tcurrentDate = addWeeks(currentDate, 1);\n\t}\n\n\treturn returnValue;\n}\n","import HttpClient from './HttpClient';\nimport {\n\tActivity,\n\tActivityResponse,\n\tactivityFromActivityResponseObject,\n} from '../domain/Activity';\nimport { dateToYMD } from '../common/DateUtils';\n\nclass ActivityAPIService {\n\tpublic async getAllActivitiesForUserBetweenDates(\n\t\tstartDate: Date,\n\t\tendDate: Date\n\t): Promise<Activity[]> {\n\t\ttry {\n\t\t\tconst response = await HttpClient.get({\n\t\t\t\tpath: `/activities?startDate=${dateToYMD(\n\t\t\t\t\tstartDate\n\t\t\t\t)}&endDate=${dateToYMD(endDate)}`,\n\t\t\t});\n\n\t\t\tconst activities = response.data.map(\n\t\t\t\t(activity: ActivityResponse) => {\n\t\t\t\t\treturn activityFromActivityResponseObject(activity);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn Promise.resolve(activities);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tpublic async saveNewActivityForUser(\n\t\tactivityType: string,\n\t\tdate: Date\n\t): Promise<Activity> {\n\t\ttry {\n\t\t\tconst response = await HttpClient.post({\n\t\t\t\tpath: '/activities',\n\t\t\t\tauthorized: true,\n\t\t\t\tbody: {\n\t\t\t\t\ttextType: activityType,\n\t\t\t\t\tcreationDate: dateToYMD(date),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst activity = activityFromActivityResponseObject(response.data);\n\n\t\t\treturn Promise.resolve(activity);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport default new ActivityAPIService();\n","export function isBasicStateValueValid(value: string | number) {\n\tif (value === undefined) return false;\n\tif (value === null) return false;\n\tif (String(value) === '') return false;\n\tif (String(value) === 'DEFAULT') return false;\n\n\tif (typeof value === 'number') {\n\t\tif (value === 0) return false;\n\t}\n\n\treturn true;\n}\n","import React, { Component } from 'react';\nimport ActivityAPIService from '../../ports/ActivityAPIService';\nimport { ActivityTypes } from '../../domain/ActivityType';\nimport { isBasicStateValueValid } from '../../common/ValueUtils';\n\ninterface NewActivityDialogueProps {\n\tcurrentDate: Date;\n\tupdateListFunction: () => void;\n}\n\nclass NewActivityDialogue extends Component<NewActivityDialogueProps> {\n\tstate = {\n\t\tcurrentNewActivityFormSelection: '',\n\t\tnewActivityDialogueButtonText: '+',\n\t\tnewActivityDialogueVisible: false,\n\t};\n\n\tprivate createDropdownOptionsForActivityTypes() {\n\t\tlet returnOptions = [];\n\t\tfor (const key in ActivityTypes) {\n\t\t\treturnOptions.push(\n\t\t\t\t<option\n\t\t\t\t\tkey={`type_${ActivityTypes[key].typeText}`}\n\t\t\t\t\tdata-testid='activity_add_dialogue_type_dropdown_option'\n\t\t\t\t\tvalue={ActivityTypes[key].typeText}>\n\t\t\t\t\t{ActivityTypes[key].typeDescription}\n\t\t\t\t</option>\n\t\t\t);\n\t\t}\n\n\t\treturn returnOptions;\n\t}\n\n\tprivate handleSelectDropDownChange(\n\t\tevent: React.ChangeEvent<HTMLSelectElement>\n\t) {\n\t\tthis.setState({\n\t\t\tcurrentNewActivityFormSelection: event.target.value,\n\t\t});\n\t}\n\n\tprivate async handleCreateNewActivityButton(\n\t\tevent: React.FormEvent<HTMLFormElement>\n\t) {\n\t\tevent.preventDefault();\n\t\tconsole.log(this.state.currentNewActivityFormSelection);\n\t\tif (\n\t\t\t!isBasicStateValueValid(this.state.currentNewActivityFormSelection)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait ActivityAPIService.saveNewActivityForUser(\n\t\t\tthis.state.currentNewActivityFormSelection,\n\t\t\tthis.props.currentDate\n\t\t);\n\t\tconsole.log('REACHED', this.props.updateListFunction);\n\n\t\tthis.props.updateListFunction();\n\t}\n\n\tprivate handleShowNewActivityDialogueButton(event: React.SyntheticEvent) {\n\t\tevent.preventDefault();\n\n\t\tif (this.state.newActivityDialogueVisible) {\n\t\t\tthis.setState({\n\t\t\t\tnewActivityDialogueVisible: false,\n\t\t\t\tnewActivityDialogueButtonText: '+',\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnewActivityDialogueVisible: true,\n\t\t\t\tnewActivityDialogueButtonText: 'x',\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='is-flex is-position-fixed-bottom-right is-justify-content-flex-end is-flex-direction-row'>\n\t\t\t\t<div\n\t\t\t\t\tdata-testid='activity_add_flexparent'\n\t\t\t\t\tclassName={`is-align-self-flex-end mb-5 ${\n\t\t\t\t\t\tthis.state.newActivityDialogueVisible\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: 'is-invisible'\n\t\t\t\t\t}`}>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName='box'\n\t\t\t\t\t\tdata-testid='activity_add_dialogue'\n\t\t\t\t\t\tonSubmit={this.handleCreateNewActivityButton.bind(\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t)}>\n\t\t\t\t\t\t<p className='title is-5'>New Activity</p>\n\t\t\t\t\t\t<div className='control select'>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname='activity_type'\n\t\t\t\t\t\t\t\tdata-testid='activity_add_dialogue_type_dropdown'\n\t\t\t\t\t\t\t\tonChange={this.handleSelectDropDownChange.bind(\n\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tdefaultValue='DEFAULT'>\n\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\tdata-testid='activity_add_dialogue_type_dropdown_option'\n\t\t\t\t\t\t\t\t\tkey='type_DEFAULT'\n\t\t\t\t\t\t\t\t\tvalue='DEFAULT'>\n\t\t\t\t\t\t\t\t\tSelect an activity type...\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t{this.createDropdownOptionsForActivityTypes()}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='button is-link'\n\t\t\t\t\t\t\tdata-testid='activity_add_dialogue_submit_button'\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvalue='Submit'></input>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={this.handleShowNewActivityDialogueButton.bind(\n\t\t\t\t\t\tthis\n\t\t\t\t\t)}\n\t\t\t\t\tdata-testid='activity_add_button'\n\t\t\t\t\tclassName='button is-dark is-medium is-align-self-flex-end mb-5 mr-5 ml-5'>\n\t\t\t\t\t{this.state.newActivityDialogueButtonText}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewActivityDialogue;\n","import { format, getWeek, getYear, isSameDay } from 'date-fns';\nimport { Activity } from '../../domain/Activity';\nimport ActivitySub from './ActivitySub';\nimport ActivityAPIService from '../../ports/ActivityAPIService';\nimport { Component } from 'react';\nimport { eachDayOfWeekForDate } from '../../common/DateUtils';\nimport NewActivityDialogue from './NewActivityDialogue';\nimport Calendar from 'react-calendar';\n\ninterface ActivitiesComponentStates {\n\tcurrentDate: Date;\n\tactivities: Activity[];\n\tcalendarVisible: boolean;\n}\n\nclass Activities extends Component<{}, ActivitiesComponentStates> {\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentDate: new Date(),\n\t\t\tactivities: [],\n\t\t\tcalendarVisible: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateActivitiesInState();\n\t}\n\n\tprivate updateActivitiesInState() {\n\t\tconst eachDayOfWeekCurrent = eachDayOfWeekForDate(\n\t\t\tthis.state.currentDate\n\t\t);\n\n\t\tActivityAPIService.getAllActivitiesForUserBetweenDates(\n\t\t\teachDayOfWeekCurrent[0],\n\t\t\teachDayOfWeekCurrent[eachDayOfWeekCurrent.length - 1]\n\t\t).then((activities) => {\n\t\t\tthis.setState({ activities: activities });\n\t\t});\n\t}\n\n\tprivate createDayClustersForActivitiesInWeekForStateCurrentDate() {\n\t\treturn eachDayOfWeekForDate(this.state.currentDate).map(\n\t\t\t(weekDay, weekIndex) => {\n\t\t\t\t//map each day of the current week\n\t\t\t\tconst filtered = this.state.activities.filter(\n\t\t\t\t\t//filter if one of the weekDays overlaps with a creationDate in the activity\n\t\t\t\t\t(act) => isSameDay(act.creationDate, weekDay)\n\t\t\t\t);\n\n\t\t\t\tif (filtered.length > 0) {\n\t\t\t\t\t//map each matching one to an ActivitSub component\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='row'\n\t\t\t\t\t\t\tdata-testid='activities_list_day'\n\t\t\t\t\t\t\tkey={`week_day_${weekIndex.toString()}`}>\n\t\t\t\t\t\t\t<p className='subtitle is-6 mt-6'>{`${format(\n\t\t\t\t\t\t\t\tfiltered[0].creationDate,\n\t\t\t\t\t\t\t\t'MMMM do',\n\t\t\t\t\t\t\t\t{ weekStartsOn: 1 }\n\t\t\t\t\t\t\t)}`}</p>\n\t\t\t\t\t\t\t{filtered.map((activity, filterIndex) => (\n\t\t\t\t\t\t\t\t<ActivitySub\n\t\t\t\t\t\t\t\t\t{...activity}\n\t\t\t\t\t\t\t\t\tkey={`batch_no_${filterIndex.toString()}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate changeCurrentDate(newDateSelection: Date | Date[]) {\n\t\tif (Array.isArray(newDateSelection)) {\n\t\t\tthis.setState({ currentDate: newDateSelection[0] });\n\t\t\tthis.setState({ calendarVisible: false });\n\t\t} else {\n\t\t\tthis.setState({ currentDate: newDateSelection });\n\t\t\tthis.setState({ calendarVisible: false });\n\t\t}\n\t}\n\n\tprivate toggleCalendarVisibility(event: React.SyntheticEvent) {\n\t\tevent.preventDefault();\n\n\t\tthis.setState({ calendarVisible: !this.state.calendarVisible });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='is-fullpage'>\n\t\t\t\t<div className='columns is-centered'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='column is-two-fifths'\n\t\t\t\t\t\tdata-testid='activities_list'>\n\t\t\t\t\t\t<p className='title is-1'>\n\t\t\t\t\t\t\t{`${getYear(this.state.currentDate)}`}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div className='is-flex is-flex-direction-row'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button is-justify-content-start'\n\t\t\t\t\t\t\t\tonClick={this.toggleCalendarVisibility.bind(this)}>\n\t\t\t\t\t\t\t\t{`CW ${getWeek(this.state.currentDate, {\n\t\t\t\t\t\t\t\t\tweekStartsOn: 1,\n\t\t\t\t\t\t\t\t})}`}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\tclassName={`ml-6 calendar box is-justify-content-end ${\n\t\t\t\t\t\t\t\t\tthis.state.calendarVisible\n\t\t\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t\t\t: 'is-hidden'\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tminDetail='year'\n\t\t\t\t\t\t\t\tshowWeekNumbers={true}\n\t\t\t\t\t\t\t\tonChange={this.changeCurrentDate.bind(this)}\n\t\t\t\t\t\t\t\tvalue={this.state.currentDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='rows'>\n\t\t\t\t\t\t\t{this.createDayClustersForActivitiesInWeekForStateCurrentDate()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<NewActivityDialogue\n\t\t\t\t\tcurrentDate={this.state.currentDate}\n\t\t\t\t\tupdateListFunction={this.updateActivitiesInState.bind(this)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Activities;\n","import { differenceInCalendarWeeks, getWeek } from 'date-fns';\nimport { Component } from 'react';\nimport { Challenge } from '../../domain/Challenge';\nimport ActivityIcon from '../ActivityIcon';\n\nclass ChallengeSub extends Component<Challenge> {\n\tprivate getColorCSSClassForChallengeStatus(): string {\n\t\ttry {\n\t\t\tswitch (this.props.challengeStatus.statusText) {\n\t\t\t\tcase 'SUCCEEDED':\n\t\t\t\t\treturn 'has-background-success-light';\n\t\t\t\tcase 'FAILED':\n\t\t\t\t\treturn 'has-background-danger-light';\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn 'has-background-danger-dark';\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='field row'>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`box is-grouped level ${this.getColorCSSClassForChallengeStatus()}`}\n\t\t\t\t\tdata-testid='challenge_entry'>\n\t\t\t\t\t<div className='level-left'>\n\t\t\t\t\t\t<ActivityIcon {...this.props.activityType} />\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tclassName='title is-5 ml-3'\n\t\t\t\t\t\t\tdata-testid='challenge_entry_activity_type'>\n\t\t\t\t\t\t\t{this.props.activityType.typeDescription}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='level-right level-item'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p className='subtitle is-6'>\n\t\t\t\t\t\t\t\t{this.props.timesAWeekCurrent}/\n\t\t\t\t\t\t\t\t{differenceInCalendarWeeks(\n\t\t\t\t\t\t\t\t\tthis.props.expirationDate,\n\t\t\t\t\t\t\t\t\tthis.props.startDate,\n\t\t\t\t\t\t\t\t\t{ weekStartsOn: 1 }\n\t\t\t\t\t\t\t\t) * this.props.timesAWeekGoal}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='subtitle is-6'>\n\t\t\t\t\t\t\t\tUntil CW\n\t\t\t\t\t\t\t\t{getWeek(this.props.expirationDate, {\n\t\t\t\t\t\t\t\t\tweekStartsOn: 1,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ChallengeSub;\n","export interface ChallengeStatus {\n\treadonly statusText: string;\n\treadonly statusDescription: string;\n}\n\nexport const ChallengeStatuses: { readonly [key: string]: ChallengeStatus } = {\n\tIN_PROGRESS: {\n\t\tstatusText: 'IN_PROGRESS',\n\t\tstatusDescription: 'In Progress'\n\t},\n\tSUCCEEDED: {\n\t\tstatusText: 'SUCCEEDED',\n\t\tstatusDescription: 'Succeeded'\n\t},\n\tFAILED: {\n\t\tstatusText: 'FAILED',\n\t\tstatusDescription: 'Failed'\n\t},\n};\n","import { ChallengeStatus, ChallengeStatuses } from \"./ChallengeStatus\";\nimport { ActivityType, ActivityTypes } from \"./ActivityType\";\n\nexport interface Challenge {\n\treadonly id: string;\n\treadonly activityType: ActivityType;\n\treadonly timesAWeekGoal: number;\n\treadonly timesAWeekCurrent: number;\n\treadonly startDate: Date;\n\treadonly expirationDate: Date;\n\treadonly challengeStatus: ChallengeStatus;\n\treadonly userID: string;\n}\n\nexport interface ChallengeResponse {\n\treadonly id: string;\n\treadonly activityType: string;\n\treadonly timesAWeekGoal: string;\n\treadonly timesAWeekCurrent: string;\n\treadonly startDate: string;\n\treadonly expirationDate: string;\n\treadonly challengeStatus: string;\n\treadonly userID: string;\n}\n\nexport function challengeFromChallengeResponseObject(challengeResponse: ChallengeResponse): Challenge {\n\treturn {\n\t\tid: challengeResponse.id,\n\t\tactivityType: ActivityTypes[challengeResponse.activityType],\n\t\ttimesAWeekGoal: Number(challengeResponse.timesAWeekGoal),\n\t\ttimesAWeekCurrent: Number(challengeResponse.timesAWeekCurrent),\n\t\tstartDate: new Date(challengeResponse.startDate),\n\t\texpirationDate: new Date(challengeResponse.expirationDate),\n\t\tchallengeStatus: ChallengeStatuses[challengeResponse.challengeStatus],\n\t\tuserID: challengeResponse.userID\n\t} as Challenge\n}\n","import HttpClient from './HttpClient';\nimport {\n\tChallenge,\n\tchallengeFromChallengeResponseObject,\n\tChallengeResponse,\n} from '../domain/Challenge';\nimport { dateToYMD } from '../common/DateUtils';\n\nclass ChallengeAPIService {\n\tpublic async getAllChallengesForUserBetweenDates(\n\t\tstartDate: Date,\n\t\tendDate: Date\n\t): Promise<Challenge[]> {\n\t\ttry {\n\t\t\tconst response = await HttpClient.get({\n\t\t\t\tpath: `/challenges?startDate=${dateToYMD(\n\t\t\t\t\tstartDate\n\t\t\t\t)}&endDate=${dateToYMD(endDate)}`,\n\t\t\t});\n\n\t\t\tconst receivedChallenges = response.data.map(\n\t\t\t\t(challenge: ChallengeResponse) =>\n\t\t\t\t\tchallengeFromChallengeResponseObject(challenge)\n\t\t\t);\n\n\t\t\treturn Promise.resolve(receivedChallenges);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tpublic async saveNewChallengeForUser(\n\t\tactivityType: string,\n\t\ttimesAWeekGoal: number,\n\t\tdurationInWeeks: number\n\t): Promise<Challenge> {\n\t\ttry {\n\t\t\tconst response = await HttpClient.post({\n\t\t\t\tpath: '/challenges',\n\t\t\t\tauthorized: true,\n\t\t\t\tbody: {\n\t\t\t\t\tactivityTypeText: activityType,\n\t\t\t\t\ttimesAWeekGoal: timesAWeekGoal,\n\t\t\t\t\tweeksDuration: durationInWeeks,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst challenge = challengeFromChallengeResponseObject(\n\t\t\t\tresponse.data as ChallengeResponse\n\t\t\t);\n\n\t\t\treturn Promise.resolve(challenge);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport default new ChallengeAPIService();\n","import React, { Component } from 'react';\nimport ActivityTypes from '../../domain/ActivityType';\nimport { isBasicStateValueValid } from '../../common/ValueUtils';\nimport ChallengeAPIService from '../../ports/ChallengeAPIService';\n\ninterface NewChallengeDialogueProps {\n\tupdateListFunction: () => void;\n}\n\ninterface NewChallengeCreationValues {\n\tactivityType: string;\n\tweeklyGoal: number;\n\tamountOfWeeks: number;\n}\n\ninterface NewChallengeDialogueStates {\n\tcurrentNewChallengeFormSelections: NewChallengeCreationValues;\n\tnewChallengeDialogueButtonText: string;\n\tnewChallengeDialogueVisible: boolean;\n}\n\nclass NewChallengeDialogue extends Component<\n\tNewChallengeDialogueProps,\n\tNewChallengeDialogueStates\n> {\n\tstate = {\n\t\tcurrentNewChallengeFormSelections: {\n\t\t\tactivityType: '',\n\t\t\tweeklyGoal: 0,\n\t\t\tamountOfWeeks: 0,\n\t\t},\n\t\tnewChallengeDialogueButtonText: '+',\n\t\tnewChallengeDialogueVisible: false,\n\t};\n\n\tprivate handleNewChallengeActivityTypeChange(\n\t\tevent: React.ChangeEvent<HTMLSelectElement>\n\t) {\n\t\tthis.setState({\n\t\t\tcurrentNewChallengeFormSelections: {\n\t\t\t\tactivityType: event.target.value,\n\t\t\t\tweeklyGoal: this.state.currentNewChallengeFormSelections\n\t\t\t\t\t.weeklyGoal,\n\t\t\t\tamountOfWeeks: this.state.currentNewChallengeFormSelections\n\t\t\t\t\t.amountOfWeeks,\n\t\t\t},\n\t\t});\n\t}\n\tprivate handleNewChallengeWeeklyGoalChange(\n\t\tevent: React.FormEvent<HTMLInputElement>\n\t) {\n\t\tthis.setState({\n\t\t\tcurrentNewChallengeFormSelections: {\n\t\t\t\tactivityType: this.state.currentNewChallengeFormSelections\n\t\t\t\t\t.activityType,\n\t\t\t\tweeklyGoal: Number(event.currentTarget.value),\n\t\t\t\tamountOfWeeks: this.state.currentNewChallengeFormSelections\n\t\t\t\t\t.amountOfWeeks,\n\t\t\t},\n\t\t});\n\t}\n\tprivate handleNewChallengeAmountOfWeeksChange(\n\t\tevent: React.FormEvent<HTMLInputElement>\n\t) {\n\t\tthis.setState({\n\t\t\tcurrentNewChallengeFormSelections: {\n\t\t\t\tactivityType: this.state.currentNewChallengeFormSelections\n\t\t\t\t\t.activityType,\n\t\t\t\tweeklyGoal: this.state.currentNewChallengeFormSelections\n\t\t\t\t\t.weeklyGoal,\n\t\t\t\tamountOfWeeks: Number(event.currentTarget.value),\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate createDropwDownOptionsForNewChallengeActivityTypes() {\n\t\tlet returnOptions = [];\n\t\tfor (const key in ActivityTypes) {\n\t\t\treturnOptions.push(\n\t\t\t\t<option\n\t\t\t\t\tkey={`new_challenge_activity_type_${ActivityTypes[key].typeText}`}\n\t\t\t\t\tvalue={ActivityTypes[key].typeText}\n\t\t\t\t\tdata-testid='challenge_add_dialogue_type_dropdown_option'>\n\t\t\t\t\t{ActivityTypes[key].typeDescription}\n\t\t\t\t</option>\n\t\t\t);\n\t\t}\n\n\t\treturn returnOptions;\n\t}\n\n\tprivate async handleSubmitNewChallengeCreationForm(\n\t\tevent: React.FormEvent<HTMLFormElement>\n\t) {\n\t\tevent.preventDefault();\n\n\t\tif (\n\t\t\t!isBasicStateValueValid(\n\t\t\t\tthis.state.currentNewChallengeFormSelections.activityType\n\t\t\t) ||\n\t\t\t!isBasicStateValueValid(\n\t\t\t\tthis.state.currentNewChallengeFormSelections.weeklyGoal\n\t\t\t) ||\n\t\t\t!isBasicStateValueValid(\n\t\t\t\tthis.state.currentNewChallengeFormSelections.amountOfWeeks\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait ChallengeAPIService.saveNewChallengeForUser(\n\t\t\tthis.state.currentNewChallengeFormSelections.activityType,\n\t\t\tthis.state.currentNewChallengeFormSelections.weeklyGoal,\n\t\t\tthis.state.currentNewChallengeFormSelections.amountOfWeeks\n\t\t);\n\n\t\tthis.props.updateListFunction();\n\t}\n\n\tprivate handleShowNewChallengeDialogueButton(event: React.SyntheticEvent) {\n\t\tevent.preventDefault();\n\n\t\tif (this.state.newChallengeDialogueVisible) {\n\t\t\tthis.setState({\n\t\t\t\tnewChallengeDialogueVisible: false,\n\t\t\t\tnewChallengeDialogueButtonText: '+',\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnewChallengeDialogueVisible: true,\n\t\t\t\tnewChallengeDialogueButtonText: 'x',\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='is-flex is-position-fixed-bottom-right is-justify-content-flex-end is-flex-direction-row'>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`is-align-self-flex-end mb-5 ${\n\t\t\t\t\t\tthis.state.newChallengeDialogueVisible\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: 'is-invisible'\n\t\t\t\t\t}`}>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName='box'\n\t\t\t\t\t\tonSubmit={this.handleSubmitNewChallengeCreationForm.bind(\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tdata-testid='challenge_add_dialogue'>\n\t\t\t\t\t\t<p className='title is-5'>New Challenge</p>\n\n\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName='label'\n\t\t\t\t\t\t\t\thtmlFor='new_challenge_activity_type'>\n\t\t\t\t\t\t\t\tTarget Activity:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div className='control select'>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname='new_challenge_activity_type'\n\t\t\t\t\t\t\t\t\tdefaultValue='DEFAULT'\n\t\t\t\t\t\t\t\t\tonChange={this.handleNewChallengeActivityTypeChange.bind(\n\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tdata-testid='challenge_add_dialogue_type_dropdown'>\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\tkey='type_DEFAULT'\n\t\t\t\t\t\t\t\t\t\tvalue='DEFAULT'\n\t\t\t\t\t\t\t\t\t\tdata-testid='challenge_add_dialogue_type_dropdown_option'>\n\t\t\t\t\t\t\t\t\t\tSelect an Activity Type...\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{this.createDropwDownOptionsForNewChallengeActivityTypes()}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName='label'\n\t\t\t\t\t\t\t\thtmlFor='new_challenge_weekly_goal'>\n\t\t\t\t\t\t\t\tWeekly Goal Amount:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='input mt-3'\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\tmax='21'\n\t\t\t\t\t\t\t\t\tname='new_challenge_weekly_goal'\n\t\t\t\t\t\t\t\t\tplaceholder='max. 21'\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tdata-testid='challenge_add_dialogue_weely_goal'\n\t\t\t\t\t\t\t\t\tonChange={this.handleNewChallengeWeeklyGoalChange.bind(\n\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t)}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName='label'\n\t\t\t\t\t\t\t\thtmlFor='new_challenge_amount_of_weeks'>\n\t\t\t\t\t\t\t\tAmount of Weeks:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div className='control'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='input mt-3'\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\tname='new_challenge_amount_of_weeks'\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleNewChallengeAmountOfWeeksChange.bind(\n\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t)}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='button is-link mt-5'\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvalue='Submit'></input>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='is-align-self-flex-end mb-5 ml-5 mr-5'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={this.handleShowNewChallengeDialogueButton.bind(\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tclassName='button is-dark is-medium'\n\t\t\t\t\t\tdata-testid='challenge_add_button'>\n\t\t\t\t\t\t{this.state.newChallengeDialogueButtonText}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewChallengeDialogue;\n","import { getWeek, isSameWeek } from 'date-fns';\nimport { Component } from 'react';\nimport { eachCalendarWeekRangeInMonthForDate } from '../../common/DateUtils';\nimport { Challenge } from '../../domain/Challenge';\nimport ChallengeSub from './ChallengeSub';\nimport NewChallengeDialogue from './NewChallengeDialogue';\nimport ChallengeAPIService from '../../ports/ChallengeAPIService';\n\ninterface ChallengesComponentStates {\n\tcurrentDate: Date;\n\tcoveredCalendarWeeks: number[];\n\tchallenges: Challenge[];\n}\n\nclass Challenges extends Component<\n\t{ currentDate?: Date | undefined },\n\tChallengesComponentStates\n> {\n\tconstructor(props: { currentDate?: Date | undefined }) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrentDate: new Date(),\n\t\t\tcoveredCalendarWeeks: [],\n\t\t\tchallenges: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.currentDate)\n\t\t\tthis.setState({ currentDate: this.props.currentDate });\n\n\t\tthis.updateChallengesInState();\n\t}\n\n\tprivate updateChallengesInState() {\n\t\tconst currentMonthsWeekStartsAndEnds = eachCalendarWeekRangeInMonthForDate(\n\t\t\tthis.state.currentDate\n\t\t);\n\n\t\tChallengeAPIService.getAllChallengesForUserBetweenDates(\n\t\t\tcurrentMonthsWeekStartsAndEnds[0].startingOfWeek,\n\t\t\tcurrentMonthsWeekStartsAndEnds[\n\t\t\t\tcurrentMonthsWeekStartsAndEnds.length - 1\n\t\t\t].endingOfWeek\n\t\t).then((challenges) => {\n\t\t\tthis.setState({ challenges: challenges });\n\t\t});\n\t}\n\n\tprivate createStartWeekClustersForChallengesInMonthForStateCurrentDate() {\n\t\treturn eachCalendarWeekRangeInMonthForDate(this.state.currentDate).map(\n\t\t\t(calendarWeekObject) => {\n\t\t\t\tconst filtered = this.state.challenges.filter((challenge) =>\n\t\t\t\t\tisSameWeek(\n\t\t\t\t\t\tchallenge.startDate,\n\t\t\t\t\t\tcalendarWeekObject.startingOfWeek,\n\t\t\t\t\t\t{ weekStartsOn: 1 }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif (filtered.length > 0) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='row'\n\t\t\t\t\t\t\tdata-testid='challenges_list_week'\n\t\t\t\t\t\t\tkey={`calendar_week_${calendarWeekObject.calendarWeek.toString()}`}>\n\t\t\t\t\t\t\t<p className='subtitle is-6 mt-6'>{`Started in CW ${getWeek(\n\t\t\t\t\t\t\t\tfiltered[0].startDate,\n\t\t\t\t\t\t\t\t{ weekStartsOn: 1 }\n\t\t\t\t\t\t\t)}`}</p>\n\t\t\t\t\t\t\t{filtered.map((challenge, index) => (\n\t\t\t\t\t\t\t\t<ChallengeSub\n\t\t\t\t\t\t\t\t\t{...challenge}\n\t\t\t\t\t\t\t\t\tkey={`batch_no_${index.toString()}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='is-fullpage'>\n\t\t\t\t<div className='columns is-centered'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='column is-two-fifths'\n\t\t\t\t\t\tdata-testid='challenges_list'>\n\t\t\t\t\t\t<div className='level'>\n\t\t\t\t\t\t\t<p className='title is-1 level-left'>\n\t\t\t\t\t\t\t\t{this.state.currentDate.getFullYear()}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<button className='button level-right'>\n\t\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='rows'>\n\t\t\t\t\t\t\t{this.createStartWeekClustersForChallengesInMonthForStateCurrentDate()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<NewChallengeDialogue\n\t\t\t\t\tupdateListFunction={this.updateChallengesInState.bind(this)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Challenges;\n","import { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends Component {\n\tprivate logoutAccount() {\n\t\tlocalStorage.removeItem('accessToken');\n\n        return <Redirect to='/login'></Redirect>\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='loader'>\n\t\t\t\t{this.logoutAccount()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Logout;\n","import './App.sass';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport Register from './ui/Register';\nimport Login from './ui/Login';\nimport Activities from './ui/Activities/Activities';\nimport Challenges from './ui/Challenges/Challenges';\nimport Logout from './ui/Logout';\nimport { HashRouter, Switch } from 'react-router-dom';\n\nfunction App() {\n\treturn (\n\t\t<HashRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<div id='toast-container' />\n\t\t\t<Switch>\n\t\t\t\t<PublicRoute exact path='/register' component={Register} />\n\t\t\t\t<PublicRoute exact path='/login' component={Login} />\n\n\t\t\t\t<PrivateRoute exact path='/' component={Activities} />\n\t\t\t\t<PrivateRoute exact path='/challenges' component={Challenges} />\n\t\t\t\t<PrivateRoute exact path='/logout' component={Logout} />\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}